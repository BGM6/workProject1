{"version":3,"sources":["components/UserInputForm.js","components/ListWeights.js","App.js","index.js","components/UserInputForm.module.css"],"names":["UserInputForm","props","useState","userInput","setUserInput","onSubmit","event","preventDefault","match","fetchUserInput","htmlFor","id","type","value","onChange","target","className","classes","addBtn","ListWeights","totalWeights","setTotalWeights","renderWeights","weights","map","w","idx","weight","onClick","removeWeightsHandler","useEffect","total","Number","reduce","acc","currentNum","App","setWeights","JSON","parse","localStorage","getItem","setItem","stringify","console","log","input","prevState","Math","random","toString","filter","ReactDOM","render","document","querySelector","module","exports"],"mappings":"iMAyCeA,EArCO,SAACC,GACtB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAoBA,OACC,8BACC,uBAAMC,SAlBkB,SAAAC,GACzBA,EAAMC,iBAEY,KAAdJ,GAAoBA,EAAUK,MADlB,eAED,EAIfP,EAAMQ,eAAeN,GACrBC,EAAa,MASZ,UACC,uBAAOM,QAAQ,SAAf,4BACA,uBACCC,GAAG,SACHC,KAAK,OACLC,MAAOV,EACPW,SAZqB,SAAAR,GACxBF,EAAaE,EAAMS,OAAOF,UAaxB,wBAAQG,UAAWC,IAAQC,OAA3B,uBCAWC,EAjCK,SAAClB,GACpB,MAAwCC,mBAAS,GAAjD,mBAAOkB,EAAP,KAAqBC,EAArB,KAGMC,EAAgBrB,EAAMsB,QAAQC,KAAI,SAACC,EAAGC,GAC3C,OAAO,8BACN,8BACC,+BACA,+BAAKA,EAAM,EAAX,MAAiBD,EAAEE,OAAnB,MAA6B,wBAAQC,QAAS,WAC7C3B,EAAM4B,qBAAqBJ,EAAEd,KADD,4BAHde,MAkBlB,OANAI,qBAAU,WACT,IAAMC,EAAQ9B,EAAMsB,QAAQC,KAAI,SAAAC,GAAC,OAAIO,OAAOP,EAAEE,WAC5CM,QAAO,SAACC,EAAKC,GAAN,OAAqBD,EAAMC,IAAY,GAChDd,EAAgBU,KACd,CAAC9B,EAAMsB,UAGT,gCACED,EACD,8BACC,yCAAYF,WCiBDgB,G,MAvCH,WACX,MAA8BlC,mBAAS,IAAvC,mBAAOqB,EAAP,KAAgBc,EAAhB,KAEAP,qBAAU,WACT,IAAMP,EAAUe,KAAKC,MAAMC,aAAaC,QAAQ,YAC5ClB,GACHc,EAAWd,KAEV,IAEHO,qBAAU,WACTU,aAAaE,QAAQ,UAAWJ,KAAKK,UAAUpB,MAC7C,CAACA,IAgBJ,OADAqB,QAAQC,IAAItB,GAEX,sBAAKP,UAAU,YAAf,UACC,cAAC,EAAD,CAAeP,eAZM,SAAAqC,GACtBT,GAAW,SAAAU,GACV,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CACrBpB,OAAQmB,EACRnC,GAAIqC,KAAKC,SAASC,oBASnB,cAAC,EAAD,CACC3B,QAASA,EACTM,qBAnB0B,SAAClB,GAC7B0B,EAAWd,EAAQ4B,QAAO,SAAA1B,GAAC,OAAIA,EAAEd,KAAOA,cChB1CyC,IAASC,OACR,cAAC,EAAD,IACAC,SAASC,cAAc,W,kBCPxBC,EAAOC,QAAU,CAAC,OAAS,iC","file":"static/js/main.3c0e8d7d.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport classes from './UserInputForm.module.css';\n\nconst UserInputForm = (props) => {\n\tconst [userInput, setUserInput] = useState('');\n\n\tlet formIsValid = false;\n\n\tconst formSubmitHandler = event => {\n\t\tevent.preventDefault();\n\t\tconst numbers = /^[0-9]+$/;\n\t\tif (userInput !== '' && userInput.match(numbers)) {\n\t\t\tformIsValid = true;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t\tprops.fetchUserInput(userInput);\n\t\tsetUserInput('');\n\t};\n\n\tconst addWeightHandler = event => {\n\t\tsetUserInput(event.target.value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={formSubmitHandler}>\n\t\t\t\t<label htmlFor=\"weight\">Enter Weight: </label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"weight\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={userInput}\n\t\t\t\t\tonChange={addWeightHandler}\n\t\t\t\t/>\n\t\t\t\t<button className={classes.addBtn}>Add</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default UserInputForm;","import React, {useEffect, useState} from 'react';\n\nconst ListWeights = (props) => {\n\tconst [totalWeights, setTotalWeights] = useState(0);\n\n\n\tconst renderWeights = props.weights.map((w, idx) => {\n\t\treturn <div key={idx}>\n\t\t\t<div>\n\t\t\t\t<span>\n\t\t\t\t<h4>{idx + 1} - {w.weight} g <button onClick={() => {\n\t\t\t\t\tprops.removeWeightsHandler(w.id);\n\t\t\t\t}\n\t\t\t\t}>delete</button></h4>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>;\n\t});\n\n\tuseEffect(() => {\n\t\tconst total = props.weights.map(w => Number(w.weight))\n\t\t\t.reduce((acc, currentNum) => acc + currentNum, 0);\n\t\tsetTotalWeights(total);\n\t}, [props.weights]);\n\n\treturn (\n\t\t<div>\n\t\t\t{renderWeights}\n\t\t\t<div>\n\t\t\t\t<h1>Total: {totalWeights}</h1>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ListWeights;","import React, {useState, useEffect} from 'react';\n\nimport UserInputForm from './components/UserInputForm';\nimport ListWeights from './components/ListWeights';\n\nimport './index.css';\n\nconst App = () => {\n\tconst [weights, setWeights] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst weights = JSON.parse(localStorage.getItem('weights'));\n\t\tif (weights) {\n\t\t\tsetWeights(weights);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('weights', JSON.stringify(weights));\n\t}, [weights]);\n\n\tconst removeWeightsHandler = (id) => {\n\t\tsetWeights(weights.filter(w => w.id !== id));\n\t};\n\n\tconst fetchUserInput = input => {\n\t\tsetWeights(prevState => {\n\t\t\treturn [...prevState, {\n\t\t\t\tweight: input,\n\t\t\t\tid: Math.random().toString()\n\t\t\t}];\n\t\t});\n\t};\n\n\tconsole.log(weights)\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<UserInputForm fetchUserInput={fetchUserInput}/>\n\t\t\t<ListWeights\n\t\t\t\tweights={weights}\n\t\t\t\tremoveWeightsHandler={removeWeightsHandler}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from './App';\n\nReactDOM.render(\n\t<App/>,\n\tdocument.querySelector('#root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addBtn\":\"UserInputForm_addBtn__1DEbz\"};"],"sourceRoot":""}